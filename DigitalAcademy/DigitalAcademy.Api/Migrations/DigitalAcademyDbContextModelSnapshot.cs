// <auto-generated />
using System;
using DigitalAcademy.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DigitalAcademy.Api.Migrations
{
    [DbContext(typeof(DigitalAcademyDbContext))]
    partial class DigitalAcademyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DigitalAcademy.Model.City_tbl", b =>
                {
                    b.Property<long>("city_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("city_id"), 1L, 1);

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("state_id")
                        .HasColumnType("bigint");

                    b.HasKey("city_id");

                    b.ToTable("City_Tbls");
                });

            modelBuilder.Entity("DigitalAcademy.Model.Country_tbl", b =>
                {
                    b.Property<long>("country_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("country_id"), 1L, 1);

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("country_id");

                    b.ToTable("Country_Tbls");
                });

            modelBuilder.Entity("DigitalAcademy.Model.Course_tbl", b =>
                {
                    b.Property<long>("courseid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("courseid"), 1L, 1);

                    b.Property<string>("courseduration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("coursename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("courseid");

                    b.ToTable("Course_Tbls");
                });

            modelBuilder.Entity("DigitalAcademy.Model.State_tbl", b =>
                {
                    b.Property<long>("state_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("state_id"), 1L, 1);

                    b.Property<long?>("country_id")
                        .HasColumnType("bigint");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("state_id");

                    b.ToTable("State_Tbls");
                });

            modelBuilder.Entity("DigitalAcademy.Model.Student_tbl", b =>
                {
                    b.Property<long>("student_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("student_id"), 1L, 1);

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("city_id")
                        .HasColumnType("bigint");

                    b.Property<string>("contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("country_id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("dateofbirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isfranchiesestudent")
                        .HasColumnType("bit");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pincode")
                        .HasColumnType("int");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("state_id")
                        .HasColumnType("bigint");

                    b.Property<string>("student_fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("student_lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("student_mname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("student_id");

                    b.ToTable("Student_Tbls");
                });
#pragma warning restore 612, 618
        }
    }
}
